// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AssertMethod1 - Use 'AssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            WinEdit uITxtNameEdit = this.UIForm1Window.UITxtNameWindow.UITxtNameEdit;
            WinEdit uITxtNrcEdit = this.UIForm1Window.UITxtNrcWindow.UITxtNrcEdit;
            WinEdit uITxtCityEdit = this.UIForm1Window.UITxtCityWindow.UITxtCityEdit;
            WinButton uIInsertButton = this.UIForm1Window.UIInsertWindow.UIInsertButton;
            WinTable uIDataGridViewTable = this.UIForm1Window.UIDgResultWindow.UIDataGridViewTable;
            #endregion

            // Verify that the 'ControlType' property of 'txtName' text box equals 'Edit'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UITxtNameEditControlType, uITxtNameEdit.ControlType.ToString());

            // Verify that the 'ControlType' property of 'txtNrc' text box equals 'Edit'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UITxtNrcEditControlType, uITxtNrcEdit.ControlType.ToString());

            // Verify that the 'ControlType' property of 'txtCity' text box equals 'Edit'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UITxtCityEditControlType, uITxtCityEdit.ControlType.ToString());

            // Verify that the 'ControlType' property of 'Insert' button equals 'Button'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UIInsertButtonControlType, uIInsertButton.ControlType.ToString());

            // Verify that the 'ControlType' property of 'DataGridView' table equals 'Table'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UIDataGridViewTableControlType, uIDataGridViewTable.ControlType.ToString());
        }
        
        #region Properties
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public UIForm1Window UIForm1Window
        {
            get
            {
                if ((this.mUIForm1Window == null))
                {
                    this.mUIForm1Window = new UIForm1Window();
                }
                return this.mUIForm1Window;
            }
        }
        #endregion
        
        #region Fields
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private UIForm1Window mUIForm1Window;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'txtName' text box equals 'Edit'
        /// </summary>
        public string UITxtNameEditControlType = "Edit";
        
        /// <summary>
        /// Verify that the 'ControlType' property of 'txtNrc' text box equals 'Edit'
        /// </summary>
        public string UITxtNrcEditControlType = "Edit";
        
        /// <summary>
        /// Verify that the 'ControlType' property of 'txtCity' text box equals 'Edit'
        /// </summary>
        public string UITxtCityEditControlType = "Edit";
        
        /// <summary>
        /// Verify that the 'ControlType' property of 'Insert' button equals 'Button'
        /// </summary>
        public string UIInsertButtonControlType = "Button";
        
        /// <summary>
        /// Verify that the 'ControlType' property of 'DataGridView' table equals 'Table'
        /// </summary>
        public string UIDataGridViewTableControlType = "Table";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIForm1Window : WinWindow
    {
        
        public UIForm1Window()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Form1";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public UITxtNameWindow UITxtNameWindow
        {
            get
            {
                if ((this.mUITxtNameWindow == null))
                {
                    this.mUITxtNameWindow = new UITxtNameWindow(this);
                }
                return this.mUITxtNameWindow;
            }
        }
        
        public UITxtNrcWindow UITxtNrcWindow
        {
            get
            {
                if ((this.mUITxtNrcWindow == null))
                {
                    this.mUITxtNrcWindow = new UITxtNrcWindow(this);
                }
                return this.mUITxtNrcWindow;
            }
        }
        
        public UITxtCityWindow UITxtCityWindow
        {
            get
            {
                if ((this.mUITxtCityWindow == null))
                {
                    this.mUITxtCityWindow = new UITxtCityWindow(this);
                }
                return this.mUITxtCityWindow;
            }
        }
        
        public UIInsertWindow UIInsertWindow
        {
            get
            {
                if ((this.mUIInsertWindow == null))
                {
                    this.mUIInsertWindow = new UIInsertWindow(this);
                }
                return this.mUIInsertWindow;
            }
        }
        
        public UIDgResultWindow UIDgResultWindow
        {
            get
            {
                if ((this.mUIDgResultWindow == null))
                {
                    this.mUIDgResultWindow = new UIDgResultWindow(this);
                }
                return this.mUIDgResultWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITxtNameWindow mUITxtNameWindow;
        
        private UITxtNrcWindow mUITxtNrcWindow;
        
        private UITxtCityWindow mUITxtCityWindow;
        
        private UIInsertWindow mUIInsertWindow;
        
        private UIDgResultWindow mUIDgResultWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITxtNameWindow : WinWindow
    {
        
        public UITxtNameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtName";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtNameEdit
        {
            get
            {
                if ((this.mUITxtNameEdit == null))
                {
                    this.mUITxtNameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtNameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "City";
                    this.mUITxtNameEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITxtNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITxtNrcWindow : WinWindow
    {
        
        public UITxtNrcWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtNrc";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtNrcEdit
        {
            get
            {
                if ((this.mUITxtNrcEdit == null))
                {
                    this.mUITxtNrcEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtNrcEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITxtNrcEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtNrcEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITxtCityWindow : WinWindow
    {
        
        public UITxtCityWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtCity";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtCityEdit
        {
            get
            {
                if ((this.mUITxtCityEdit == null))
                {
                    this.mUITxtCityEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtCityEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITxtCityEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtCityEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIInsertWindow : WinWindow
    {
        
        public UIInsertWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnInsert";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UIInsertButton
        {
            get
            {
                if ((this.mUIInsertButton == null))
                {
                    this.mUIInsertButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIInsertButton.SearchProperties[WinButton.PropertyNames.Name] = "Insert";
                    this.mUIInsertButton.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIInsertButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIInsertButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDgResultWindow : WinWindow
    {
        
        public UIDgResultWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dgResult";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinTable UIDataGridViewTable
        {
            get
            {
                if ((this.mUIDataGridViewTable == null))
                {
                    this.mUIDataGridViewTable = new WinTable(this);
                    #region Search Criteria
                    this.mUIDataGridViewTable.SearchProperties[WinTable.PropertyNames.Name] = "DataGridView";
                    this.mUIDataGridViewTable.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIDataGridViewTable;
            }
        }
        #endregion
        
        #region Fields
        private WinTable mUIDataGridViewTable;
        #endregion
    }
}
